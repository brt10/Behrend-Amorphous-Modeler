void Model::changeBoxSize(double newBoxSize){
void Model::initAtomsInShell()
void Model::initClosestNeighbors()
void Model::initShellNumbers(const size_t aSubs, const size_t bSubs, 
void Model::keepInBox()
void Model::keepInInterfaceBox(double oldX)
void Model::makeCrystal(const int numBoxes, const int e, const bool interface)
void Model::insertH(const Point point, const int siId){
void Model::deleteAtom(const int id)
void Model::deleteElement(const int type)
void Model::performAnnealing(const int numSwaps, const int numVSwaps, string filename)
void Model::randomSwap()
void Model::readConstants(const char* filename) 
void Model::readModel()
void Model::relaxVolume(){
void Model::setAccelerations()
void Model::setAngularEnergy()
void Model::setEnergy()
void Model::setForces()
void Model::setPositions(const double timestep)
void Model::setRadialEnergy()
void Model::setRepulsiveEnergy()
void Model::swapBonds(const size_t aSubs, const size_t bSubs, 
void Model::writeBonds(string filename)
void Model::writeModel(string filename)
void Model::writeNearestNeighbors(string filename)
void Model::writePositions(string filename)
void Model::writeVasp(string filename){
void Model::setDefaultConstants()
