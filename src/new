/* Initializes the atoms nearby contributing to the repulsive energy
*/
void Model::initClosestNeighbors()
{
        static size_t n=atoms.size(),i,j;
        double tempDist;

        for(i = 0; i < n; i++)
        {
//              if(SHELL_ONLY && atoms[i].shellNumber > CLUSTER_MAX_SHELL+1)
//                      continue;

                // reset array of nearby atoms
                atoms[i].closestNeighbors.clear();

                for(j = 0; j < n; j++)
                {
//                      if(SHELL_ONLY && atoms[j].shellNumber > CLUSTER_MAX_SHELL+1)
//                              continue;

                        // ignore the atom if it is a neighbor of the current one
                        if(i == j || isNearestNeighbor(j, atoms[i]) || isSecondNearestNeighbor(j, i)) continue;

                        tempDist = atoms[i].coordinates.distanceTo(closestPointWithPBC(atoms[i].coordinates, atoms[j].coordinates));

                        if(tempDist <= REPEL_DISTANCE) atoms[i].closestNeighbors.push_back(j);
                }
        }
}


